import os
import pandas as pd
from config import data_dir, pogoda_dir

# üìå –ü–æ–ª–Ω—ã–π –º–∞–ø–ø–∏–Ω–≥ —Ñ–∞–π–ª–æ–≤ –≤—Ä–µ–¥–∏—Ç–µ–ª–µ–π
pest_file_map = {
    "–∏—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –ø—Ä—É—Å": "locustitalian.csv",
    "—Ö–ª–µ–±–Ω—ã–π –∂—É–∫": "breadbeetleZKO.csv",
    "–∫–æ–ª–æ—Ä–∞–¥—Å–∫–∏–π –∂—É–∫": "coloradobeetleSKOZKO.csv",
    "—é–∂–Ω–æ–∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∞—è —Ç–æ–º–∞—Ç–Ω–∞—è –º–æ–ª—å": "R_satomato_ALM.xlsx",
    "–≥–æ—Ä—á–∞–∫ –ø–æ–ª–∑—É—á–∏–π": "repens_ALM.xlsx",
}

# üìå –ü–æ–ª–Ω—ã–π –º–∞–ø–ø–∏–Ω–≥ —Ñ–∞–π–ª–æ–≤ –ø–æ–≥–æ–¥—ã
weather_file_map = {
    "–∞–∫–º–æ–ª–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å": "akmolinskaya.csv",
    "–∞–∫—Ç—é–±–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å": "aktubinskaya.csv",
    "–∞–ª–º–∞—Ç–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å": "almatinskaya.csv",
    "–≤–æ—Å—Ç–æ—á–Ω–æ-–∫–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å": "vko.csv",
    "–∂–∞–º–±—ã–ª—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å": "zhambyl.csv",
    "–∑–∞–ø–∞–¥–Ω–æ-–∫–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å": "zko.csv",
    "–∫–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å": "karaganda.csv",
    "–∫–æ—Å—Ç–∞–Ω–∞–π—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å": "kostanay.csv",
    "–∫—ã–∑—ã–ª–æ—Ä–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å": "kyzylorda.csv",
    "–º–∞–Ω–≥–∏—Å—Ç–∞—É—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å": "mangistau.csv",
    "–ø–∞–≤–ª–æ–¥–∞—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å": "pavlodar.csv",
    "—Å–µ–≤–µ—Ä–æ-–∫–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å": "sko.csv",
    "—Ç—É—Ä–∫–µ—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å": "turkestan.csv"
}


### üìå –§–£–ù–ö–¶–ò–Ø –ó–ê–ì–†–£–ó–ö–ò –í–†–ï–î–ò–¢–ï–õ–ï–ô
def load_pest_data(pest_name):
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –≤—Ä–µ–¥–∏—Ç–µ–ª—è—Ö, —É—á–∏—Ç—ã–≤–∞—è —Ä–∞–∑–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤.

    :param pest_name: –ù–∞–∑–≤–∞–Ω–∏–µ –≤—Ä–µ–¥–∏—Ç–µ–ª—è.
    :return: DataFrame —Å –∫–æ–ª–æ–Ω–∫–∞–º–∏ [region, year, population].
    """
    if pest_name not in pest_file_map:
        print(f"‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—Ä–µ–¥–∏—Ç–µ–ª—è '{pest_name}'")
        return None

    file_path = os.path.join(data_dir, pest_file_map[pest_name])
    if not os.path.exists(file_path):
        print(f"‚ùå –§–∞–π–ª '{pest_file_map[pest_name]}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return None

    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º: {file_path}")

    # üìå –õ–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞ –æ—Ç–¥–µ–ª—å–Ω–æ
    if pest_name == "–∏—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –ø—Ä—É—Å":
        df = pd.read_csv(file_path)
        df = df.rename(columns={"–†–µ–≥–∏–æ–Ω": "region"})
        df = df.melt(id_vars=["region"], var_name="year", value_name="population")

    elif pest_name == "—Ö–ª–µ–±–Ω—ã–π –∂—É–∫":
        df = pd.read_csv(file_path, delimiter=";", encoding="utf-8")
        df = df.rename(columns={"–†–µ–≥–∏–æ–Ω": "region"})
        df = df.melt(id_vars=["region"], var_name="year", value_name="population")

    elif pest_name == "–∫–æ–ª–æ—Ä–∞–¥—Å–∫–∏–π –∂—É–∫":
        df = pd.read_csv(file_path)
        df = df.rename(columns={"–†–µ–≥–∏–æ–Ω": "region"})
        df = df.drop(columns=["Unnamed: 0"], errors="ignore")  # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏
        df = df.melt(id_vars=["region"], var_name="year", value_name="population")

    elif pest_name == "—é–∂–Ω–æ–∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∞—è —Ç–æ–º–∞—Ç–Ω–∞—è –º–æ–ª—å":
        df = pd.read_excel(file_path, sheet_name="data")  # XLSX —Å –ª–∏—Å—Ç–æ–º "data"
        df = df.rename(columns={"ds": "year", "Total sum (—Ç—ã—Å. –≥–∞)": "population"})
        df["year"] = pd.to_datetime(df["year"]).dt.year
        df["region"] = "–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif pest_name == "–≥–æ—Ä—á–∞–∫ –ø–æ–ª–∑—É—á–∏–π":
        df = pd.read_excel(file_path, sheet_name=0, skiprows=2)  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º 2 —Å—Ç—Ä–æ–∫–∏
        df = df.rename(columns={"ds": "year", "Total sum (—Ç—ã—Å. –≥–∞)": "population"})
        df["year"] = pd.to_datetime(df["year"]).dt.year
        df["region"] = "–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    else:
        df = None

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω—É–∂–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –µ—Å—Ç—å
    if df is not None and {"region", "year", "population"}.issubset(df.columns):
        return df

    print(f"‚ùå –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –≤ {file_path} –∏–º–µ—é—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É")
    return None


### üìå –§–£–ù–ö–¶–ò–Ø –ó–ê–ì–†–£–ó–ö–ò –ü–û–ì–û–î–´
def load_weather_data(region):
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–æ–≥–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–≥–∏–æ–Ω–∞ —Å —É—á–µ—Ç–æ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞.

    :param region: –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–≥–∏–æ–Ω–∞ (–Ω–∞ —Ä—É—Å—Å–∫–æ–º).
    :return: DataFrame —Å –ø–æ–≥–æ–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.
    """
    if region not in weather_file_map:
        print(f"‚ùå –û—à–∏–±–∫–∞: –Ω–µ—Ç –ø–æ–≥–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–µ–≥–∏–æ–Ω–∞ '{region}'")
        return None

    file_path = os.path.join(pogoda_dir, weather_file_map[region])

    if not os.path.exists(file_path):
        print(f"‚ùå –û—à–∏–±–∫–∞: —Ñ–∞–π–ª '{weather_file_map[region]}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ {pogoda_dir}")
        return None

    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω –ø–æ–≥–æ–¥–Ω—ã–π —Ñ–∞–π–ª: {file_path}")

    # üìå –õ–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–≥–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if region == "–∞–∫–º–æ–ª–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å":
        df = pd.read_csv(file_path, delimiter=",", encoding="utf-8")
    elif region == "–∂–∞–º–±—ã–ª—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å":
        df = pd.read_csv(file_path, delimiter=";", encoding="windows-1251")
    elif region == "—Ç—É—Ä–∫–µ—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å":
        df = pd.read_excel(file_path, sheet_name="–ü–æ–≥–æ–¥–∞")
    else:
        # –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞
        if file_path.endswith(".csv"):
            df = pd.read_csv(file_path)
        elif file_path.endswith(".xlsx"):
            df = pd.read_excel(file_path)
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞ {file_path}")
            return None

    df.columns = [col.lower().strip() for col in df.columns]
    return df


### üìå –§–£–ù–ö–¶–ò–ò –°–ü–ò–°–ö–û–í
def list_available_pests():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤—Ä–µ–¥–∏—Ç–µ–ª–µ–π.
    """
    return list(pest_file_map.keys())


def list_available_regions():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–µ–≥–∏–æ–Ω–æ–≤, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –ø–æ–≥–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.
    """
    return list(weather_file_map.keys())
